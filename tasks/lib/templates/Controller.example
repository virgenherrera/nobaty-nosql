import { ICrudController } from '../Lib/interfaces';
import { IGetAll{{Module}}, {{Module}}Repository } from '../Repository/{{Module}}';
import { {{Module}} } from '../Poco/{{Module}}';
// only for debugging
// import { dd, dump , die } from '../Lib/Debug';

/* {{Module}} Controller Class */
export class {{Module}}Controller implements ICrudController {
	static getInstance(): {{Module}}Controller {
		return new {{Module}}Controller;
	}

	async createAction(params: any): Promise<any> {
		const poco = new {{Module}}(params, true);
		const data = await {{Module}}Repository.getInstance().Create(poco);

		return new {{Module}}(data);
	}

	async editAction(params: any): Promise<{{Module}}> {
		const poco = new {{Module}}(params, true);

		return await {{Module}}Repository.getInstance().Update(poco);
	}

	async listAction(params: any): Promise<IGetAll{{Module}}> {
		return await {{Module}}Repository.getInstance().GetAll(params);
	}

	async showAction(params: any): Promise<{{Module}}> {
		return await {{Module}}Repository.getInstance().GetById(params);
	}

	async deleteAction({ id }): Promise<{{Module}}> {
		return await {{Module}}Repository.getInstance().Delete({id});
	}
}
